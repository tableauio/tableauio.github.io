<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on</title><link>https://tableauio.github.io/docs/design/</link><description>Recent content in Design on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Tableau</copyright><lastBuildDate>Tue, 06 Oct 2020 08:49:55 +0000</lastBuildDate><atom:link href="https://tableauio.github.io/docs/design/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://tableauio.github.io/docs/design/overview/</link><pubDate>Sun, 09 Jan 2022 19:39:57 +0800</pubDate><guid>https://tableauio.github.io/docs/design/overview/</guid><description>Features # Convert Excel/CSV/XML/YAML to JSON/Text/Bin, JSON is the first-class citizen of exporting targets. Use Protobuf to define the structure of Excel/CSV/XML/YAML. Use Golang to develop the conversion engine. Support multiple programming languages, thanks to Protobuf (proto3). Concepts # Importer: Excel/CSV/XML/YAML importer. IR: Intermediate Representation. Filter: filter the IR. Exporter: JSON, Text, and Bin. Protoconf: a configuration metadata format based on protobuf. Workflow # flowchart TD subgraph Input I1(Excel) click I1 href &amp;quot;https://github.</description></item><item><title>Metadata</title><link>https://tableauio.github.io/docs/design/metadata/</link><pubDate>Sun, 09 Jan 2022 19:39:57 +0800</pubDate><guid>https://tableauio.github.io/docs/design/metadata/</guid><description>Notation # The syntax is specified using Extended Backus-Naur Form (EBNF).
Workbook -&amp;gt; Protoconf # Basic # workbook: (AliasTest)DemoTest, worksheet: (AliasActivity)DemoActivity
protoconf file name is alias_test.proto. If with no (), name will be demo_test.proto configuration message name is AliasActivity. If with no (), name will be DemoActivity list: [ELEM-TYPE]COLUMN-TYPE, COLUMN-TYPE is column type, ELEM-TYPE is message name and list prefix (must not conflict with the protobuf keyword). map: map&amp;lt;KEY-TYPE,VALUE-TYPE&amp;gt;, KEY-TYPE must be scalar types, and VALUE-TYPE is message name and map prefix (must not conflict with build-in scalar type).</description></item></channel></rss>