<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guide on</title><link>https://tableauio.github.io/docs/guide/</link><description>Recent content in Guide on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Tableauio</copyright><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://tableauio.github.io/docs/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts</title><link>https://tableauio.github.io/docs/guide/concepts/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/docs/guide/concepts/</guid><description>Terminology # Basics # Term Definition Workbook An excel file.
A XML file.
A bundle of CSV files named with the same prefix seperated by #. Worksheet A sheet in a excel file.
A root node of a XML file.
A CSV file. Metasheet A worksheet named @TABLEAU to specify tableau parser options. Row The row in a sheet.</description></item><item><title>Grammar and types</title><link>https://tableauio.github.io/docs/guide/grammar-and-types/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/docs/guide/grammar-and-types/</guid><description>Overview # Tableau borrows most of its syntax and types from Protocol Buffers (proto3) and Golang.
Scalar types # Details disccused at Protocol Buffers Proto3 Scalar.
Kind Types Default Numbers int32, uint32
int64, uint64
float, double 0
0
0.0 Booleans bool false Strings string &amp;quot;&amp;quot; Bytes bytes &amp;quot;&amp;quot; Well-known types # Datetime # Type Default Description datetime 0000-00-00 00:00:00 Format: yyyy-MM-dd HH:mm:ss, e.</description></item><item><title>Enum</title><link>https://tableauio.github.io/docs/guide/enum/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/docs/guide/enum/</guid><description>Enum value # The tableau parser accepts three enum value forms:
enum value number. enum value name. enum value alias name (with EnumValueOptions specified). For example, enum type FruitType in common.proto is defined as:
enum FruitType { FRUIT_TYPE_UNKOWN = 0 [(tableau.evalue).name = &amp;quot;unknown&amp;quot;]; FRUIT_TYPE_ORANGE = 1 [(tableau.evalue).name = &amp;quot;orange&amp;quot;]; FRUIT_TYPE_APPLE = 2 [(tableau.evalue).name = &amp;quot;apple&amp;quot;]; FRUIT_TYPE_BANANA = 3 [(tableau.evalue).name = &amp;quot;banana&amp;quot;]; } Then the three forms of enum value are all accepted:</description></item><item><title>Predefined types</title><link>https://tableauio.github.io/docs/guide/predefined-types/</link><pubDate>Sat, 26 Feb 2022 08:48:57 +0000</pubDate><guid>https://tableauio.github.io/docs/guide/predefined-types/</guid><description>Overview # You can define enum or struct types in a protoconf file (such as common.proto) previously. It means you create custom types, and then can use them to specify the column type or cross-cell struct type of a worksheet.
Usage # Prepend a dot . to CustomType when you use it in a worksheet. Specify the Imports option when call tableau.GenProto func, to import the common proto files, where custom enum or struct types are defined.</description></item><item><title>Field property</title><link>https://tableauio.github.io/docs/guide/field-property/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://tableauio.github.io/docs/guide/field-property/</guid><description>Options # Option Type Description unique bool Check map key uniqueness. range string Format: &amp;quot;left, right&amp;quot;. E.g.: &amp;quot;1,10&amp;quot;, &amp;quot;1,~&amp;quot;, &amp;quot;~,10&amp;quot;. Different interpretations of range: - number: value range. - repeated: size range of array. - string: count of utf-8 code point. refer string Format: &amp;quot;&amp;lt;SheetName&amp;gt;.&amp;lt;ColumnName&amp;gt;&amp;quot;. Ensure this field is in another message&amp;rsquo;s field range. E.g.: ItemConf.ID. Supported by tableauio/loader. sequence int64 Ensure this field&amp;rsquo;s value is a sequence and begins with this value.</description></item></channel></rss>