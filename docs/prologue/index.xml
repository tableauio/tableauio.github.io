<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>https://tableauio.github.io/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Tableauio</copyright><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://tableauio.github.io/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start</title><link>https://tableauio.github.io/docs/prologue/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/docs/prologue/quick-start/</guid><description>Prerequisites # Go, any one of the three latest major releases of Go. For installation instructions, see Goâ€™s Getting Started guide. Protocol buffer compiler, protoc, version 3. For installation instructions, see Protocol Buffer Compiler Installation. Go plugins for the protocol compiler: Install the protocol compiler plugins for Go using the following commands:
go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26 Update your PATH so that the protoc compiler can find the plugins:</description></item><item><title>Introduction</title><link>https://tableauio.github.io/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://tableauio.github.io/docs/prologue/introduction/</guid><description>tableauc # The tableauc is the tableau compiler with protogen and confgen inside.
protogen # protogen convert Excel/CSV/XML files to Protoconf files. Protoconf is a dialect of Protocol Buffers (proto3) extended with tableau options, aimed to define the structure of Excel/CSV/XML.
flowchart LR subgraph Input direction RL I1(Excel) I2(CSV) I3(XML) end Input --&amp;gt; B B((protogen)):::orangecalss --&amp;gt; C(Protoconf) classDef orangecalss fill:#f96; confgen # flowchart LR subgraph Input direction RL I1(Excel) I2(CSV) I3(XML) end Input --&amp;gt; B A(Protoconf) --&amp;gt; B B((confgen)):::orangecalss --&amp;gt; Output classDef orangecalss fill:#f96; subgraph Output direction RL O1(&amp;quot;JSON (protojson)&amp;quot;) O2(&amp;quot;Text (prototext)&amp;quot;) O3(&amp;quot;Wire (protowire)&amp;quot;) end</description></item></channel></rss>