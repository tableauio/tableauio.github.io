<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guide on</title><link>https://tableauio.github.io/nl/en/docs/guide/</link><description>Recent content in Guide on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Tableauio</copyright><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://tableauio.github.io/nl/en/docs/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts</title><link>https://tableauio.github.io/nl/en/docs/guide/concepts/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/concepts/</guid><description>Terminology # Basics # Term Definition workbook An excel file.
A XML file.
A bundle of CSV files named with the same prefix seperated by #. worksheet A sheet in a excel file.
A root node of a XML file.
A CSV file. metasheet A worksheet named @TABLEAU to specify tableau parser options. row The row in a sheet.</description></item><item><title>Grammar and types</title><link>https://tableauio.github.io/nl/en/docs/guide/grammar-and-types/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/grammar-and-types/</guid><description>Overview # Tableau borrows most of its syntax and types from Protocol Buffers (proto3) and Golang.
Scalar types # Details disccused at Protocol Buffers Proto3 Scalar.
Kind Types Default Numbers int32, uint32
int64, uint64
float, double 0
0
0.0 Booleans bool false Strings string &amp;quot;&amp;quot; Bytes bytes &amp;quot;&amp;quot; Well-known types # Datetime # Type Default Description datetime 0000-00-00 00:00:00 Format: yyyy-MM-dd HH:mm:ss, e.</description></item><item><title>Struct</title><link>https://tableauio.github.io/nl/en/docs/guide/struct/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/struct/</guid><description>Cross-cell struct # Horizontal and vertical struct both should be used with:
cross-cell horizontal/vertical map, as map value type. Map â†’ cross-cell horizontal/vertical list, as list element type. List â†’ In-cell struct # Each field type of the struct should be scalar type.
Input # A worksheet ItemConf in HelloWorld.xlsx:
ID Property map&amp;lt;uint32, Item&amp;gt; {int32 ID,string Name,string Desc}Prop Item&amp;rsquo;s ID. Item&amp;rsquo;s property.</description></item><item><title>List</title><link>https://tableauio.github.io/nl/en/docs/guide/list/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/list/</guid><description>Cross-cell list # Horizontal list # ðŸ‘‰ Vertical layout is list's default layout. There are two kinds of cross-cell horizontal map:
cross-cell horizontal scalar list, as element type is scalar. E.g: []int32. cross-cell horizontal struct list, as element type is struct. E.g: [Item]int32. Cross-cell horizontal scalar list # ðŸ‘‰ Not supported yet. Cross-cell horizontal struct list # Input # A worksheet ItemConf in HelloWorld.</description></item><item><title>Enum</title><link>https://tableauio.github.io/nl/en/docs/guide/enum/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/enum/</guid><description>Enum value # The tableau parser accepts three enum value forms:
enum value number. enum value name. enum value alias name (with EnumValueOptions specified). For example, enum type FruitType is defined as:
enum FruitType { FRUIT_TYPE_UNKOWN = 0 [(tableau.evalue).name = &amp;quot;unknown&amp;quot;]; FRUIT_TYPE_ORANGE = 1 [(tableau.evalue).name = &amp;quot;orange&amp;quot;]; FRUIT_TYPE_APPLE = 2 [(tableau.evalue).name = &amp;quot;apple&amp;quot;]; FRUIT_TYPE_BANANA = 3 [(tableau.evalue).name = &amp;quot;banana&amp;quot;]; } Then the three forms of enum value are all accepted:</description></item><item><title>Map</title><link>https://tableauio.github.io/nl/en/docs/guide/map/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/map/</guid><description>Cross-cell map # Horizontal map # There are two kinds of cross-cell horizontal map:
cross-cell horizontal scalar map, as map value type is scalar. E.g: map&amp;lt;int32, int32&amp;gt;. cross-cell horizontal struct map, as map value type is struct. E.g: map&amp;lt;int32, Item&amp;gt;. Cross-cell horizontal scalar map # ðŸ‘‰ Not supported yet. Cross-cell horizontal struct map # NOTE: need to be tested enough.
Input # A worksheet ItemConf in HelloWorld.</description></item><item><title>Nesting</title><link>https://tableauio.github.io/nl/en/docs/guide/nesting/</link><pubDate>Sat, 26 Feb 2022 08:48:57 +0000</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/nesting/</guid><description>Overview # ðŸ‘‰ The nested composite type's first field/element/item can not be a composite type. Map in map # Horizontal-map in vertical-map # Input # A worksheet ItemConf in HelloWorld.xlsx:
ID Name Prop1ID Prop1Value Prop2ID Prop2Value map&amp;lt;int32, Item&amp;gt; string map&amp;lt;int32, Prop&amp;gt; int64 int32 int64 Item&amp;rsquo;s id. Item&amp;rsquo;s name. Prop&amp;rsquo;s id. Prop&amp;rsquo;s value. Prop&amp;rsquo;s id. Prop&amp;rsquo;s value. 1 item1 10 100 20 200 2 item2 30 300 40 400 3 item3 50 500 Output # hello_world.</description></item><item><title>Predefined types</title><link>https://tableauio.github.io/nl/en/docs/guide/predefined-types/</link><pubDate>Sat, 26 Feb 2022 08:48:57 +0000</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/predefined-types/</guid><description>Enum # TODO
Struct # TODO
Variable naming # You can define custom variable name with the predefined struct.</description></item><item><title>Metasheet @TABLEAU</title><link>https://tableauio.github.io/nl/en/docs/guide/metasheet/</link><pubDate>Sat, 26 Feb 2022 13:59:39 +0100</pubDate><guid>https://tableauio.github.io/nl/en/docs/guide/metasheet/</guid><description>Options # Option Function Sheet The worksheet name needed to be processed. Alias Rename worksheet to be used as the generated protoconf message name. Nameline The line number of column name definition in a cell. 0 means the whole cell.
Default: 0. Typeline The line number of column type definition in a cell. 0 means the whole cell.</description></item></channel></rss>